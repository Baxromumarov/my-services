// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/get/json-resp": {
            "get": {
                "description": "API for getting json data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "train"
                ],
                "summary": "get json data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JsonFile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "This api is using for getting users list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/post": {
            "post": {
                "description": "This api is using for creating new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/register": {
            "post": {
                "description": "This api uses for registration new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "user body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/verification": {
            "post": {
                "description": "This api uses for sendin email code to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Send Email Code",
                "parameters": [
                    {
                        "description": "user body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.EmailVer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "This api is using for getting user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BusinessActivity": {
            "type": "object",
            "properties": {
                "doubtful_revenue": {
                    "type": "number"
                },
                "hahal_revenue": {
                    "type": "integer"
                },
                "halal": {
                    "type": "number"
                },
                "not_halal": {
                    "type": "number"
                },
                "not_halal_revenue": {
                    "type": "number"
                },
                "questionable": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.BussinessSummary": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                },
                "last_updated": {
                    "type": "string"
                },
                "source_filling_date": {
                    "type": "string"
                },
                "source_filling_type": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Data": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "bussiness_summary": {
                    "$ref": "#/definitions/models.BussinessSummary"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identifiers": {
                    "$ref": "#/definitions/models.Identifiers"
                },
                "is_buyable": {
                    "type": "boolean"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "is_sellabe": {
                    "type": "boolean"
                },
                "key_stats": {
                    "$ref": "#/definitions/models.KeyStats"
                },
                "mpi": {
                    "type": "string"
                },
                "musaffa": {
                    "$ref": "#/definitions/models.Musaffa"
                },
                "name": {
                    "type": "string"
                },
                "option_data": {
                    "$ref": "#/definitions/models.OptionData"
                },
                "purchase_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PurchaseStatuses"
                    }
                },
                "ticker": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "underlying_symbol_id": {
                    "type": "string"
                }
            }
        },
        "models.Identifiers": {
            "type": "object",
            "properties": {
                "CUSIP": {
                    "type": "string"
                },
                "FIGI": {
                    "type": "string"
                },
                "ISIN": {
                    "type": "string"
                },
                "RIC": {
                    "type": "string"
                },
                "SEDOL": {
                    "type": "string"
                }
            }
        },
        "models.InterestBearingDebt": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "debtRatio": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.InterestBearingSecuritiesAndAssets": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "interestRatio": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.JsonFile": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Data"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.KeyStats": {
            "type": "object",
            "properties": {
                "average_daily_volume_for_last_10_days": {
                    "type": "string"
                },
                "current_ratio": {
                    "type": "string"
                },
                "dividient": {
                    "type": "integer"
                },
                "dividient_per_share": {
                    "type": "string"
                },
                "dividient_yield": {
                    "type": "string"
                },
                "dividient_yield_ratio": {
                    "type": "integer"
                },
                "eps": {
                    "type": "string"
                },
                "l_t_debt_equility": {
                    "type": "string"
                },
                "market_capitalization": {
                    "type": "string"
                },
                "p_e": {
                    "type": "string"
                },
                "price_change_1_day": {
                    "type": "string"
                },
                "price_change_5_day": {
                    "type": "string"
                },
                "quick_ratio": {
                    "type": "string"
                },
                "roa": {
                    "type": "string"
                },
                "roi": {
                    "type": "string"
                },
                "total_debt_equity": {
                    "type": "string"
                }
            }
        },
        "models.Musaffa": {
            "type": "object",
            "properties": {
                "business_activity": {
                    "$ref": "#/definitions/models.BusinessActivity"
                },
                "company_name": {
                    "type": "string"
                },
                "compliance_ranking": {
                    "type": "integer"
                },
                "id_musaffo": {
                    "type": "string"
                },
                "interest_bearing_debt": {
                    "$ref": "#/definitions/models.InterestBearingDebt"
                },
                "interest_bearing_securities_and_assets": {
                    "$ref": "#/definitions/models.InterestBearingSecuritiesAndAssets"
                },
                "last_update": {
                    "type": "string"
                },
                "report_date": {
                    "type": "string"
                },
                "report_source": {
                    "type": "string"
                },
                "shariah_compliance_status": {
                    "type": "string"
                },
                "stock_name": {
                    "type": "string"
                },
                "total_revenue": {
                    "type": "integer"
                },
                "trailing_36_month_avr_cap": {
                    "type": "integer"
                }
            }
        },
        "models.OptionData": {
            "type": "object",
            "properties": {
                "option_group_id": {
                    "type": "string"
                },
                "right": {
                    "type": "string"
                },
                "strike_price": {
                    "type": "string"
                }
            }
        },
        "models.PurchaseStatuses": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "pocket_id": {
                    "type": "string"
                },
                "sell_count": {
                    "type": "integer"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/response.Error"
                }
            }
        },
        "v1.Address": {
            "type": "object",
            "properties": {
                "City": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                },
                "District": {
                    "type": "string"
                },
                "PostalCode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "v1.CreateUserRequestBody": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Address"
                    }
                },
                "Status": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "post": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Post"
                    }
                },
                "typeId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "v1.EmailVer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "email_code": {
                    "type": "string"
                }
            }
        },
        "v1.Media": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1.Post": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.Media"
                    }
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
